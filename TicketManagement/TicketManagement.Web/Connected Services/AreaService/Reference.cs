//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TicketManagement.Web.AreaService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Area", Namespace="http://schemas.datacontract.org/2004/07/TicketManagement.WcfService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Area : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CoordinateXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CoordinateYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LayoutIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CoordinateX {
            get {
                return this.CoordinateXField;
            }
            set {
                if ((this.CoordinateXField.Equals(value) != true)) {
                    this.CoordinateXField = value;
                    this.RaisePropertyChanged("CoordinateX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CoordinateY {
            get {
                return this.CoordinateYField;
            }
            set {
                if ((this.CoordinateYField.Equals(value) != true)) {
                    this.CoordinateYField = value;
                    this.RaisePropertyChanged("CoordinateY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LayoutId {
            get {
                return this.LayoutIdField;
            }
            set {
                if ((this.LayoutIdField.Equals(value) != true)) {
                    this.LayoutIdField = value;
                    this.RaisePropertyChanged("LayoutId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/TicketManagement.WcfService.Exceptions.Ba" +
        "se")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TicketManagement.Web.AreaService.AreaWithSameDescriptionInTheLayoutExistException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TicketManagement.Web.AreaService.EntityDoesNotExistException))]
    public partial class WcfException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Type ExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Type Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AreaWithSameDescriptionInTheLayoutExistException", Namespace="http://schemas.datacontract.org/2004/07/TicketManagement.WcfService.Exceptions")]
    [System.SerializableAttribute()]
    public partial class AreaWithSameDescriptionInTheLayoutExistException : TicketManagement.Web.AreaService.WcfException {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityDoesNotExistException", Namespace="http://schemas.datacontract.org/2004/07/TicketManagement.WcfService.Exceptions")]
    [System.SerializableAttribute()]
    public partial class EntityDoesNotExistException : TicketManagement.Web.AreaService.WcfException {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AreaService.IAreaContract")]
    public interface IAreaContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAreaContract/GetAreas", ReplyAction="http://tempuri.org/IAreaContract/GetAreasResponse")]
        TicketManagement.Web.AreaService.Area[] GetAreas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAreaContract/GetAreas", ReplyAction="http://tempuri.org/IAreaContract/GetAreasResponse")]
        System.Threading.Tasks.Task<TicketManagement.Web.AreaService.Area[]> GetAreasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAreaContract/GetArea", ReplyAction="http://tempuri.org/IAreaContract/GetAreaResponse")]
        TicketManagement.Web.AreaService.Area GetArea(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAreaContract/GetArea", ReplyAction="http://tempuri.org/IAreaContract/GetAreaResponse")]
        System.Threading.Tasks.Task<TicketManagement.Web.AreaService.Area> GetAreaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAreaContract/AddArea", ReplyAction="http://tempuri.org/IAreaContract/AddAreaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TicketManagement.Web.AreaService.EntityDoesNotExistException), Action="http://tempuri.org/IAreaContract/AddAreaEntityDoesNotExistExceptionFault", Name="EntityDoesNotExistException", Namespace="http://schemas.datacontract.org/2004/07/TicketManagement.WcfService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(TicketManagement.Web.AreaService.AreaWithSameDescriptionInTheLayoutExistException), Action="http://tempuri.org/IAreaContract/AddAreaAreaWithSameDescriptionInTheLayoutExistEx" +
            "ceptionFault", Name="AreaWithSameDescriptionInTheLayoutExistException", Namespace="http://schemas.datacontract.org/2004/07/TicketManagement.WcfService.Exceptions")]
        int AddArea(TicketManagement.Web.AreaService.Area entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAreaContract/AddArea", ReplyAction="http://tempuri.org/IAreaContract/AddAreaResponse")]
        System.Threading.Tasks.Task<int> AddAreaAsync(TicketManagement.Web.AreaService.Area entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAreaContract/UpdateArea", ReplyAction="http://tempuri.org/IAreaContract/UpdateAreaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TicketManagement.Web.AreaService.EntityDoesNotExistException), Action="http://tempuri.org/IAreaContract/UpdateAreaEntityDoesNotExistExceptionFault", Name="EntityDoesNotExistException", Namespace="http://schemas.datacontract.org/2004/07/TicketManagement.WcfService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(TicketManagement.Web.AreaService.AreaWithSameDescriptionInTheLayoutExistException), Action="http://tempuri.org/IAreaContract/UpdateAreaAreaWithSameDescriptionInTheLayoutExis" +
            "tExceptionFault", Name="AreaWithSameDescriptionInTheLayoutExistException", Namespace="http://schemas.datacontract.org/2004/07/TicketManagement.WcfService.Exceptions")]
        void UpdateArea(TicketManagement.Web.AreaService.Area entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAreaContract/UpdateArea", ReplyAction="http://tempuri.org/IAreaContract/UpdateAreaResponse")]
        System.Threading.Tasks.Task UpdateAreaAsync(TicketManagement.Web.AreaService.Area entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAreaContract/DeleteArea", ReplyAction="http://tempuri.org/IAreaContract/DeleteAreaResponse")]
        void DeleteArea(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAreaContract/DeleteArea", ReplyAction="http://tempuri.org/IAreaContract/DeleteAreaResponse")]
        System.Threading.Tasks.Task DeleteAreaAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAreaContractChannel : TicketManagement.Web.AreaService.IAreaContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AreaContractClient : System.ServiceModel.ClientBase<TicketManagement.Web.AreaService.IAreaContract>, TicketManagement.Web.AreaService.IAreaContract {
        
        public AreaContractClient() {
        }
        
        public AreaContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AreaContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AreaContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AreaContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TicketManagement.Web.AreaService.Area[] GetAreas() {
            return base.Channel.GetAreas();
        }
        
        public System.Threading.Tasks.Task<TicketManagement.Web.AreaService.Area[]> GetAreasAsync() {
            return base.Channel.GetAreasAsync();
        }
        
        public TicketManagement.Web.AreaService.Area GetArea(int id) {
            return base.Channel.GetArea(id);
        }
        
        public System.Threading.Tasks.Task<TicketManagement.Web.AreaService.Area> GetAreaAsync(int id) {
            return base.Channel.GetAreaAsync(id);
        }
        
        public int AddArea(TicketManagement.Web.AreaService.Area entity) {
            return base.Channel.AddArea(entity);
        }
        
        public System.Threading.Tasks.Task<int> AddAreaAsync(TicketManagement.Web.AreaService.Area entity) {
            return base.Channel.AddAreaAsync(entity);
        }
        
        public void UpdateArea(TicketManagement.Web.AreaService.Area entity) {
            base.Channel.UpdateArea(entity);
        }
        
        public System.Threading.Tasks.Task UpdateAreaAsync(TicketManagement.Web.AreaService.Area entity) {
            return base.Channel.UpdateAreaAsync(entity);
        }
        
        public void DeleteArea(int id) {
            base.Channel.DeleteArea(id);
        }
        
        public System.Threading.Tasks.Task DeleteAreaAsync(int id) {
            return base.Channel.DeleteAreaAsync(id);
        }
    }
}
